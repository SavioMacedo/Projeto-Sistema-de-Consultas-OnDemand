//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 13/10/2017 16:32:17
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Linq;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Model;

namespace Persistencia
{

    public partial class Contexto : DbContext
    {

        public Contexto() :
            base()
        {
            OnCreated();
        }

        public Contexto(DbContextOptions<Contexto> options) :
            base(options)
        {
            OnCreated();
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.Options.Extensions.OfType<RelationalOptionsExtension>().Any(ext => !string.IsNullOrEmpty(ext.ConnectionString) || ext.Connection != null))
            CustomizeConfiguration(ref optionsBuilder);
            base.OnConfiguring(optionsBuilder);
        }

        partial void CustomizeConfiguration(ref DbContextOptionsBuilder optionsBuilder);

        public virtual DbSet<Usuario> Usuarios
        {
            get;
            set;
        }

        public virtual DbSet<Atualiza> Atualizas
        {
            get;
            set;
        }

        public virtual DbSet<Consulta> Consultas
        {
            get;
            set;
        }

        public virtual DbSet<Versao> Versaos
        {
            get;
            set;
        }

        public virtual DbSet<SQL_LINHA> SQL_LINHAs
        {
            get;
            set;
        }

        public virtual DbSet<PARAMETRO_CONSULTA> PARAMETRO_CONSULTAs
        {
            get;
            set;
        }

        public virtual DbSet<Tipo_Parametro> Tipo_Parametros
        {
            get;
            set;
        }

        public virtual DbSet<Tipo_Associacao> Tipo_Associacaos
        {
            get;
            set;
        }

        public virtual DbSet<Assoc_usua_consu> Assoc_usua_consus
        {
            get;
            set;
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            this.UsuarioMapping(modelBuilder);
            this.CustomizeUsuarioMapping(modelBuilder);

            this.AtualizaMapping(modelBuilder);
            this.CustomizeAtualizaMapping(modelBuilder);

            this.ConsultaMapping(modelBuilder);
            this.CustomizeConsultaMapping(modelBuilder);

            this.VersaoMapping(modelBuilder);
            this.CustomizeVersaoMapping(modelBuilder);

            this.SQL_LINHAMapping(modelBuilder);
            this.CustomizeSQL_LINHAMapping(modelBuilder);

            this.PARAMETRO_CONSULTAMapping(modelBuilder);
            this.CustomizePARAMETRO_CONSULTAMapping(modelBuilder);

            this.Tipo_ParametroMapping(modelBuilder);
            this.CustomizeTipo_ParametroMapping(modelBuilder);

            this.Tipo_AssociacaoMapping(modelBuilder);
            this.CustomizeTipo_AssociacaoMapping(modelBuilder);

            this.Assoc_usua_consuMapping(modelBuilder);
            this.CustomizeAssoc_usua_consuMapping(modelBuilder);

            RelationshipsMapping(modelBuilder);
            CustomizeMapping(ref modelBuilder);
        }
    
        #region Usuario Mapping

        private void UsuarioMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Usuario>().ToTable(@"Usuarios");
            modelBuilder.Entity<Usuario>().Property<long>(x => x.ID).HasColumnName(@"ID").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Usuario>().Property<string>(x => x.NOME).HasColumnName(@"NOME").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Usuario>().Property<string>(x => x.SENHA).HasColumnName(@"SENHA").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Usuario>().Property<string>(x => x.EMAIL).HasColumnName(@"EMAIL").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Usuario>().HasKey(@"ID");
        }
	
        partial void CustomizeUsuarioMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Atualiza Mapping

        private void AtualizaMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Atualiza>().ToTable(@"Atualizas");
            modelBuilder.Entity<Atualiza>().Property<long>(x => x.ID).HasColumnName(@"ID").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Atualiza>().Property<System.DateTime>(x => x.DT_ATUALIZACAO).HasColumnName(@"DT_ATUALIZACAO").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Atualiza>().Property<string>(x => x.DESCRICAO).HasColumnName(@"DESCRICAO").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Atualiza>().Property<long>(x => x.ConsultaID).HasColumnName(@"ConsultaID").ValueGeneratedNever();
            modelBuilder.Entity<Atualiza>().Property<long>(x => x.UsuarioID).HasColumnName(@"UsuarioID").ValueGeneratedNever();
            modelBuilder.Entity<Atualiza>().HasKey(@"ID");
        }
	
        partial void CustomizeAtualizaMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Consulta Mapping

        private void ConsultaMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Consulta>().ToTable(@"Consultas");
            modelBuilder.Entity<Consulta>().Property<long>(x => x.ID).HasColumnName(@"ID").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Consulta>().Property<string>(x => x.DESCRICAO).HasColumnName(@"DESCRICAO").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Consulta>().Property<System.DateTime>(x => x.DT_CRIACAO).HasColumnName(@"DT_CRIACAO").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Consulta>().Property<string>(x => x.IC_ATIVO).HasColumnName(@"IC_ATIVO").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Consulta>().HasKey(@"ID");
        }
	
        partial void CustomizeConsultaMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Versao Mapping

        private void VersaoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Versao>().ToTable(@"Versaos");
            modelBuilder.Entity<Versao>().Property<long>(x => x.ID).HasColumnName(@"ID").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Versao>().Property<short>(x => x.NU_VERSAO).HasColumnName(@"NU_VERSAO").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Versao>().Property<System.DateTime>(x => x.DT_CRIACAO).HasColumnName(@"DT_CRIACAO").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Versao>().Property<string>(x => x.DESCRICAO).HasColumnName(@"DESCRICAO").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Versao>().Property<long>(x => x.ConsultaID).HasColumnName(@"ConsultaID").ValueGeneratedNever();
            modelBuilder.Entity<Versao>().HasKey(@"ID");
        }
	
        partial void CustomizeVersaoMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region SQL_LINHA Mapping

        private void SQL_LINHAMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<SQL_LINHA>().ToTable(@"SQL_LINHAs");
            modelBuilder.Entity<SQL_LINHA>().Property<long>(x => x.ID).HasColumnName(@"ID").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<SQL_LINHA>().Property<string>(x => x.NU_LINHA).HasColumnName(@"NU_LINHA").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<SQL_LINHA>().Property<string>(x => x.SQL).HasColumnName(@"SQL").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<SQL_LINHA>().Property<long>(x => x.VersaoID).HasColumnName(@"VersaoID").ValueGeneratedNever();
            modelBuilder.Entity<SQL_LINHA>().HasKey(@"ID");
        }
	
        partial void CustomizeSQL_LINHAMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region PARAMETRO_CONSULTA Mapping

        private void PARAMETRO_CONSULTAMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<PARAMETRO_CONSULTA>().ToTable(@"PARAMETRO_CONSULTAs");
            modelBuilder.Entity<PARAMETRO_CONSULTA>().Property<long>(x => x.ID).HasColumnName(@"ID").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<PARAMETRO_CONSULTA>().Property<string>(x => x.NOME).HasColumnName(@"NOME").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<PARAMETRO_CONSULTA>().Property<string>(x => x.DESCRICAO).HasColumnName(@"DESCRICAO").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<PARAMETRO_CONSULTA>().Property<long>(x => x.VersaoID).HasColumnName(@"VersaoID").ValueGeneratedNever();
            modelBuilder.Entity<PARAMETRO_CONSULTA>().HasKey(@"ID");
        }
	
        partial void CustomizePARAMETRO_CONSULTAMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Tipo_Parametro Mapping

        private void Tipo_ParametroMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Tipo_Parametro>().ToTable(@"Tipo_Parametros");
            modelBuilder.Entity<Tipo_Parametro>().Property<long>(x => x.ID).HasColumnName(@"ID").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Tipo_Parametro>().Property<string>(x => x.NOME).HasColumnName(@"NOME").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Tipo_Parametro>().HasKey(@"ID");
        }
	
        partial void CustomizeTipo_ParametroMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Tipo_Associacao Mapping

        private void Tipo_AssociacaoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Tipo_Associacao>().ToTable(@"Tipo_Associacaos");
            modelBuilder.Entity<Tipo_Associacao>().Property<long>(x => x.ID).HasColumnName(@"ID").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Tipo_Associacao>().Property<string>(x => x.TP_ASSOC).HasColumnName(@"TP_ASSOC").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Tipo_Associacao>().HasKey(@"ID");
        }
	
        partial void CustomizeTipo_AssociacaoMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Assoc_usua_consu Mapping

        private void Assoc_usua_consuMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Assoc_usua_consu>().ToTable(@"Assoc_usua_consus");
            modelBuilder.Entity<Assoc_usua_consu>().Property<long>(x => x.ID).HasColumnName(@"ID").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Assoc_usua_consu>().Property<System.DateTime>(x => x.DT_CRIACAO).HasColumnName(@"DT_CRIACAO").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Assoc_usua_consu>().Property<long>(x => x.Tipo_AssociacaoID).HasColumnName(@"Tipo_AssociacaoID").ValueGeneratedNever();
            modelBuilder.Entity<Assoc_usua_consu>().Property<long>(x => x.UsuarioID).HasColumnName(@"UsuarioID").ValueGeneratedNever();
            modelBuilder.Entity<Assoc_usua_consu>().Property<long>(x => x.ConsultaID).HasColumnName(@"ConsultaID").ValueGeneratedNever();
            modelBuilder.Entity<Assoc_usua_consu>().HasKey(@"ID");
        }
	
        partial void CustomizeAssoc_usua_consuMapping(ModelBuilder modelBuilder);

        #endregion

        private void RelationshipsMapping(ModelBuilder modelBuilder)
        {

        #region Usuario Navigation properties

            modelBuilder.Entity<Usuario>().HasMany(x => x.Atualiza).WithOne(op => op.Usuario).IsRequired(true).HasForeignKey(@"UsuarioID");
            modelBuilder.Entity<Usuario>().HasMany(x => x.Assoc_usua_consus).WithOne(op => op.Usuario).IsRequired(true).HasForeignKey(@"UsuarioID");

        #endregion

        #region Atualiza Navigation properties

            modelBuilder.Entity<Atualiza>().HasOne(x => x.AtualizaConsulta).WithMany(op => op.Atualizas).IsRequired(true).HasForeignKey(@"ConsultaID");
            modelBuilder.Entity<Atualiza>().HasOne(x => x.Usuario).WithMany(op => op.Atualiza).IsRequired(true).HasForeignKey(@"UsuarioID");

        #endregion

        #region Consulta Navigation properties

            modelBuilder.Entity<Consulta>().HasMany(x => x.Atualizas).WithOne(op => op.AtualizaConsulta).IsRequired(true).HasForeignKey(@"ConsultaID");
            modelBuilder.Entity<Consulta>().HasMany(x => x.Versaos).WithOne(op => op.Consulta).IsRequired(true).HasForeignKey(@"ConsultaID");
            modelBuilder.Entity<Consulta>().HasMany(x => x.Assoc_usua_consus).WithOne(op => op.Consulta).IsRequired(true).HasForeignKey(@"ConsultaID");

        #endregion

        #region Versao Navigation properties

            modelBuilder.Entity<Versao>().HasOne(x => x.Consulta).WithMany(op => op.Versaos).IsRequired(true).HasForeignKey(@"ConsultaID");
            modelBuilder.Entity<Versao>().HasMany(x => x.SQL_LINHAs).WithOne(op => op.Versao).IsRequired(true).HasForeignKey(@"VersaoID");
            modelBuilder.Entity<Versao>().HasMany(x => x.PARAMETRO_CONSULTAs).WithOne(op => op.Versao).IsRequired(true).HasForeignKey(@"VersaoID");

        #endregion

        #region SQL_LINHA Navigation properties

            modelBuilder.Entity<SQL_LINHA>().HasOne(x => x.Versao).WithMany(op => op.SQL_LINHAs).IsRequired(true).HasForeignKey(@"VersaoID");

        #endregion

        #region PARAMETRO_CONSULTA Navigation properties

            modelBuilder.Entity<PARAMETRO_CONSULTA>().HasOne(x => x.Versao).WithMany(op => op.PARAMETRO_CONSULTAs).IsRequired(true).HasForeignKey(@"VersaoID");
            modelBuilder.Entity<PARAMETRO_CONSULTA>().HasOne(x => x.Tipo_Parametro).WithMany(op => op.PARAMETRO_CONSULTAs).IsRequired(true).HasForeignKey(@"PARAMETRO_CONSULTAID");

        #endregion

        #region Tipo_Parametro Navigation properties

            modelBuilder.Entity<Tipo_Parametro>().HasMany(x => x.PARAMETRO_CONSULTAs).WithOne(op => op.Tipo_Parametro).IsRequired(true).HasForeignKey(@"PARAMETRO_CONSULTAID");

        #endregion

        #region Tipo_Associacao Navigation properties

            modelBuilder.Entity<Tipo_Associacao>().HasMany(x => x.Assoc_usua_consus).WithOne(op => op.Tipo_Associacao).IsRequired(true).HasForeignKey(@"Tipo_AssociacaoID");

        #endregion

        #region Assoc_usua_consu Navigation properties

            modelBuilder.Entity<Assoc_usua_consu>().HasOne(x => x.Tipo_Associacao).WithMany(op => op.Assoc_usua_consus).IsRequired(true).HasForeignKey(@"Tipo_AssociacaoID");
            modelBuilder.Entity<Assoc_usua_consu>().HasOne(x => x.Usuario).WithMany(op => op.Assoc_usua_consus).IsRequired(true).HasForeignKey(@"UsuarioID");
            modelBuilder.Entity<Assoc_usua_consu>().HasOne(x => x.Consulta).WithMany(op => op.Assoc_usua_consus).IsRequired(true).HasForeignKey(@"ConsultaID");

        #endregion
        }

        partial void CustomizeMapping(ref ModelBuilder modelBuilder);

        public bool HasChanges()
        {
            return ChangeTracker.Entries().Any(e => e.State == Microsoft.EntityFrameworkCore.EntityState.Added || e.State == Microsoft.EntityFrameworkCore.EntityState.Modified || e.State == Microsoft.EntityFrameworkCore.EntityState.Deleted);
        }

        partial void OnCreated();
    }
}
